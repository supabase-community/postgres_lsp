{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Configuration",
  "description": "The configuration that is contained inside the configuration file.",
  "type": "object",
  "properties": {
    "$schema": {
      "description": "A field for the [JSON schema](https://json-schema.org/) specification",
      "type": [
        "string",
        "null"
      ]
    },
    "db": {
      "description": "The configuration of the database connection",
      "anyOf": [
        {
          "$ref": "#/definitions/DatabaseConfiguration"
        },
        {
          "type": "null"
        }
      ]
    },
    "files": {
      "description": "The configuration of the filesystem",
      "anyOf": [
        {
          "$ref": "#/definitions/FilesConfiguration"
        },
        {
          "type": "null"
        }
      ]
    },
    "linter": {
      "description": "The configuration for the linter",
      "anyOf": [
        {
          "$ref": "#/definitions/LinterConfiguration"
        },
        {
          "type": "null"
        }
      ]
    },
    "migrations": {
      "description": "Configure migrations",
      "anyOf": [
        {
          "$ref": "#/definitions/MigrationsConfiguration"
        },
        {
          "type": "null"
        }
      ]
    },
    "vcs": {
      "description": "The configuration of the VCS integration",
      "anyOf": [
        {
          "$ref": "#/definitions/VcsConfiguration"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "DatabaseConfiguration": {
      "description": "The configuration of the database connection.",
      "type": "object",
      "properties": {
        "allowStatementExecutionsAgainst": {
          "anyOf": [
            {
              "$ref": "#/definitions/StringSet"
            },
            {
              "type": "null"
            }
          ]
        },
        "connTimeoutSecs": {
          "description": "The connection timeout in seconds.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "database": {
          "description": "The name of the database.",
          "type": [
            "string",
            "null"
          ]
        },
        "host": {
          "description": "The host of the database.",
          "type": [
            "string",
            "null"
          ]
        },
        "password": {
          "description": "The password to connect to the database.",
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "description": "The port of the database.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "username": {
          "description": "The username to connect to the database.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "FilesConfiguration": {
      "description": "The configuration of the filesystem",
      "type": "object",
      "properties": {
        "ignore": {
          "description": "A list of Unix shell style patterns. Will ignore files/folders that will match these patterns.",
          "anyOf": [
            {
              "$ref": "#/definitions/StringSet"
            },
            {
              "type": "null"
            }
          ]
        },
        "include": {
          "description": "A list of Unix shell style patterns. Will handle only those files/folders that will match these patterns.",
          "anyOf": [
            {
              "$ref": "#/definitions/StringSet"
            },
            {
              "type": "null"
            }
          ]
        },
        "maxSize": {
          "description": "The maximum allowed size for source code files in bytes. Files above this limit will be ignored for performance reasons. Defaults to 1 MiB",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        }
      },
      "additionalProperties": false
    },
    "LinterConfiguration": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "if `false`, it disables the feature and the linter won't be executed. `true` by default",
          "type": [
            "boolean",
            "null"
          ]
        },
        "ignore": {
          "description": "A list of Unix shell style patterns. The formatter will ignore files/folders that will match these patterns.",
          "anyOf": [
            {
              "$ref": "#/definitions/StringSet"
            },
            {
              "type": "null"
            }
          ]
        },
        "include": {
          "description": "A list of Unix shell style patterns. The formatter will include files/folders that will match these patterns.",
          "anyOf": [
            {
              "$ref": "#/definitions/StringSet"
            },
            {
              "type": "null"
            }
          ]
        },
        "rules": {
          "description": "List of rules",
          "anyOf": [
            {
              "$ref": "#/definitions/Rules"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "MigrationsConfiguration": {
      "description": "The configuration of the filesystem",
      "type": "object",
      "properties": {
        "after": {
          "description": "Ignore any migrations before this timestamp",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "migrationsDir": {
          "description": "The directory where the migration files are stored",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "RuleConfiguration": {
      "anyOf": [
        {
          "$ref": "#/definitions/RulePlainConfiguration"
        },
        {
          "$ref": "#/definitions/RuleWithNoOptions"
        }
      ]
    },
    "RulePlainConfiguration": {
      "type": "string",
      "enum": [
        "warn",
        "error",
        "info",
        "off"
      ]
    },
    "RuleWithNoOptions": {
      "type": "object",
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "description": "The severity of the emitted diagnostics by the rule",
          "allOf": [
            {
              "$ref": "#/definitions/RulePlainConfiguration"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Rules": {
      "type": "object",
      "properties": {
        "all": {
          "description": "It enables ALL rules. The rules that belong to `nursery` won't be enabled.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "recommended": {
          "description": "It enables the lint rules recommended by Postgres Tools. `true` by default.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "safety": {
          "anyOf": [
            {
              "$ref": "#/definitions/Safety"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Safety": {
      "description": "A list of rules that belong to this group",
      "type": "object",
      "properties": {
        "addingRequiredField": {
          "description": "Adding a new column that is NOT NULL and has no default value to an existing table effectively makes it required.",
          "anyOf": [
            {
              "$ref": "#/definitions/RuleConfiguration"
            },
            {
              "type": "null"
            }
          ]
        },
        "all": {
          "description": "It enables ALL rules for this group.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "banDropColumn": {
          "description": "Dropping a column may break existing clients.",
          "anyOf": [
            {
              "$ref": "#/definitions/RuleConfiguration"
            },
            {
              "type": "null"
            }
          ]
        },
        "banDropNotNull": {
          "description": "Dropping a NOT NULL constraint may break existing clients.",
          "anyOf": [
            {
              "$ref": "#/definitions/RuleConfiguration"
            },
            {
              "type": "null"
            }
          ]
        },
        "banDropTable": {
          "description": "Dropping a table may break existing clients.",
          "anyOf": [
            {
              "$ref": "#/definitions/RuleConfiguration"
            },
            {
              "type": "null"
            }
          ]
        },
        "recommended": {
          "description": "It enables the recommended rules for this group",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "StringSet": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "VcsClientKind": {
      "oneOf": [
        {
          "description": "Integration with the git client as VCS",
          "type": "string",
          "enum": [
            "git"
          ]
        }
      ]
    },
    "VcsConfiguration": {
      "description": "Set of properties to integrate with a VCS software.",
      "type": "object",
      "properties": {
        "clientKind": {
          "description": "The kind of client.",
          "anyOf": [
            {
              "$ref": "#/definitions/VcsClientKind"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultBranch": {
          "description": "The main branch of the project",
          "type": [
            "string",
            "null"
          ]
        },
        "enabled": {
          "description": "Whether we should integrate itself with the VCS client",
          "type": [
            "boolean",
            "null"
          ]
        },
        "root": {
          "description": "The folder where we should check for VCS files. By default, we will use the same folder where `postgrestools.jsonc` was found.\n\nIf we can't find the configuration, it will attempt to use the current working directory. If no current working directory can't be found, we won't use the VCS integration, and a diagnostic will be emitted",
          "type": [
            "string",
            "null"
          ]
        },
        "useIgnoreFile": {
          "description": "Whether we should use the VCS ignore file. When [true], we will ignore the files specified in the ignore file.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}